// <auto-generated />
using System;
using DocumentSystem.WebApi.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DocumentSystem.WebApi.Migrations
{
    [DbContext(typeof(DocumentDbContext))]
    [Migration("20190125004954_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DocumentSystem.WebApi.Infrastructure.Model.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractTypeId");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<DateTimeOffset>("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ContractId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ContractTypeId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("DocumentSystem.WebApi.Infrastructure.Model.ContractType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TypeId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ContractType");
                });

            modelBuilder.Entity("DocumentSystem.WebApi.Infrastructure.Model.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Md5HashCode")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Size");

                    b.HasKey("DocumentId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ContractId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("DocumentSystem.WebApi.Infrastructure.Model.DocumentChunk", b =>
                {
                    b.Property<int>("ChunkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Chunk");

                    b.Property<int>("ChunkSize");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DocumentId");

                    b.Property<string>("Md5HashCode")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("ChunkId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentsChunks");
                });

            modelBuilder.Entity("DocumentSystem.WebApi.Infrastructure.Model.Contract", b =>
                {
                    b.HasOne("DocumentSystem.WebApi.Infrastructure.Model.ContractType", "ContractType")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DocumentSystem.WebApi.Infrastructure.Model.Document", b =>
                {
                    b.HasOne("DocumentSystem.WebApi.Infrastructure.Model.Contract", "Contract")
                        .WithMany("Documents")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DocumentSystem.WebApi.Infrastructure.Model.DocumentChunk", b =>
                {
                    b.HasOne("DocumentSystem.WebApi.Infrastructure.Model.Document", "Document")
                        .WithMany("DocumentChunks")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
